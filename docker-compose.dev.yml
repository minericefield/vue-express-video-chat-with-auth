version: '3'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      VUE_APP_HOST: ${HOST}
    volumes:
      - ./client:/usr/src
      - public:/usr/src/dist
      - node_modules_client:/usr/src/node_modules
    stdin_open: true
    tty: true
    command: [yarn, serve]
  
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_AUTH_NAME: ${DB_AUTH_NAME}
      DB_AUTH_PASSWORD: ${DB_AUTH_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PREFIX: ${REDIS_PREFIX}
      SESSION_SECRET: ${SESSION_SECRET}
      CRYPTO_PASSWORD: ${CRYPTO_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
    ports:
      - 3000:3000
    volumes:
      - ./server:/usr/src
      - public:/usr/src/src/public
      - node_modules_server:/usr/src/node_modules
    stdin_open: true
    tty: true
    command: [yarn, serve]
  
  db:
    image: mongo:4.4-bionic
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_AUTH_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_AUTH_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      # - ./db/init.dev.js:/docker-entrypoint-initdb.d/001_users.js:ro
      - db:/data/db
    stdin_open: true
    tty: true
    # command: [mongod, --auth]

  redis:
    image: redis:6.0-alpine
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - 8025:8025

volumes:
  node_modules_client:
  node_modules_server:
  public:
  redis:
  db:
